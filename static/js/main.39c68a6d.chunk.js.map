{"version":3,"sources":["components/counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","handleClick","e","setState","counter","state","className","this","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAwBeA,E,kDArBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEC,QAAU,EAAKC,MAAMD,SAAW,KAJhD,EAAKC,MAAQ,CAAED,QAAS,GAFP,E,0CASnB,WACE,OACE,qBAAKE,UAAU,UAAf,SACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SAA6B,2CAAcC,KAAKF,MAAMD,QAAzB,gBAC7B,wBAAQE,UAAU,kBAAkBE,QAASD,KAAKN,YAAlD,gC,GAfcQ,IAAMC,WCKbC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39c68a6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/counter.css\";\r\nclass Counter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { counter: 0 };\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({ counter: (this.state.counter += 1) });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n      <div className=\"container\">\r\n        <div className=\"counter row\"><h1>Has dado {this.state.counter} clicks!</h1></div>\r\n        <button className=\"btn btn-primary\" onClick={this.handleClick}>Click me!</button>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import './App.css';\r\nimport Counter from \"./components/counter\"\r\n\r\nfunction App() {\r\n  return(<Counter />);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}